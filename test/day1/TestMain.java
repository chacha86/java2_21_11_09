package test.day1;

public class TestMain {

	public static void main(String[] args) {
		
		동물 a동물 = new 동물();
			
		double d = 1.0;
		int a = (int)10.4; // 수동 형변환 -> 실수가 정수가 되는 것은 데이터 손실의 위험이 있기 때문에 자바가 형변환 해주지 않는다.
		
		int b = 10;
		double d2 = b; // d가 double로 자동 형변환 => 정수가 실수가 되는 것은 자바가 형변환해도 안전하다고 판단.
		
		// 숫자 유형의 값은 기본적으로 작은범위 > 큰범위로 변환을 안전하다고 하고 그 반대를 위험하다고 한다.
		
		
		// 객체 유형에서의 형변환 > 다형성
		// 일반적으로 객체간에는 형변환 불가(객체의 값이나 기능이 상이하기 때문)
		// 다만, 상속관계에서는 부모가 물려준 코드를 자식이 반드시 가지고 있기 때문에 
		// 하위개념이 상위개념처럼 다루어지는게 가능
		// 다형성을 사용하는 이유는 여러가지이지만 코드의 변경이 적고 일관된 객체 사용법으로 유지보수성을 높여준다. 
		// 똑같은 동물 유형으로 다루어져도 자신들만의 방식으로 숨쉬는 이유는 오버라이딩 했기 때문.
		고양이 a고양이 = new 고양이(); //	
		강아지 a강아지 = new 강아지();

		동물[] 동물들 = {a동물, a고양이, a강아지};
		
		for(int i = 0; i < 동물들.length; i++) {
			동물들[i].숨쉬다();
		}
		
	}

}
